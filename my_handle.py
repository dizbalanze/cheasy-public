import my_config
import my_db

import telebot
from telebot import types
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Bot, ParseMode
from telegram.ext import ConversationHandler

bot_token = my_config.bot_token
tg_bot = telebot.TeleBot(bot_token)


def handle_start_command(update, context):
    user_id = update.effective_user.id
    if not my_db.check_user_exists(user_id):
        my_db.set_user_message_limit(user_id, 25)
        my_db.set_user_registration_status(user_id, False)

    start = '–ü—Ä–∏–≤–µ—Ç!\n\n–Ø - –∞–Ω–∞–ª–æ–≥ ChatGPT, –º–µ–Ω—è —Å–æ–∑–¥–∞–ª–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –≥—Ä–∞–∂–¥–∞–Ω –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π. –ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏ —É–≤–∏–¥–µ–ª–∏, –∫–∞–∫ –ø—Ä–æ–±–ª–µ–º–Ω–æ –∏–Ω–æ–≥–¥–∞ –±—ã–≤–∞–µ—Ç –ª—é–¥—è–º –∑–∞—Ö–æ–¥–∏—Ç—å –≤ ChatGPT —á–µ—Ä–µ–∑ VPN, –∞ —Ç–∞–∫–∂–µ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å —Å –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç. –ú–æ–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ—à–∞–µ—Ç —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É)\n\n–ú–µ–Ω—è —Å–æ–∑–¥–∞–ª–∏ –Ω–µ–¥–∞–≤–Ω–æ, –∏ –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø–æ–Ω—è—Ç—å —Ä–µ–∞–ª—å–Ω–æ –ª–∏ –≤–∞–º - –ª—é–¥—è–º, —è –Ω—É–∂–Ω–∞. –ü–æ—ç—Ç–æ–º—É —è –∏–∑–æ –≤—Å–µ—Ö —Å–∏–ª –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –±—ã—Ç—å –≤–∞–º –ø–æ–ª–µ–∑–Ω–æ–π –∏ —Ä–µ—à–∞—Ç—å –≤–∞—à–∏ –∑–∞–¥–∞—á–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.\n\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –Ω—É–∂–Ω–∞ –ª–∏ —è –≤–∞–º, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø–µ—Ä–≤—ã–º 100 –ª—é–¥—è–º –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –£ –≤–∞—Å –±—É–¥—É—Ç –Ω–µ—Å–≥–æ—Ä–∞–µ–º—ã–µ 25 –∑–∞–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.'
    keyboard = [[InlineKeyboardButton('–°—É–ø–µ—Ä, –∫–æ–≥–¥–∞ –Ω–∞—á–Ω–µ–º?', callback_data = 'page_2')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(start, reply_markup=reply_markup)


def handle_balance_command(update, context):
    user_id = update.message.from_user.id
    m_limit = my_db.get_user_message_limit(user_id)
    messages_sent = my_db.count_all_messages(user_id)
    if m_limit == 0:
        my_db.set_user_message_limit(user_id, 25)
        m_limit = 25
    text = f'‚òëÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –µ—â–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: *{m_limit - messages_sent} –∑–∞–ø—Ä–æ—Å–æ–≤*.\n\n‚òëÔ∏è –í—Å–µ–≥–æ –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏: *{messages_sent} –∑–∞–ø—Ä–æ—Å–æ–≤*.\n\nüí∞ –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –∑–∞–ø—Ä–æ—Å–æ–≤, —Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Ö –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º *–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–≥–∞* –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ *–ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å*.'
    keyboard = [[InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data = 'payment')],
                [InlineKeyboardButton('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞', callback_data = 'friend')],]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(text, parse_mode='Markdown', reply_markup=reply_markup)


def handle_referal_command(update, context):
    user_id = update.message.from_user.id
    m_limit = my_db.get_user_message_limit(user_id)
    if m_limit == 0:
        my_db.set_user_message_limit(user_id, 25)

    text = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º —Å–æ —Å–≤–æ–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å –≤—ã–≥–æ–¥—É. –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –≤–∞–º–∏ –¥—Ä—É–≥–∞ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å 10 –∑–∞–ø—Ä–æ—Å–æ–≤, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ üí∏\n\nü§î <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n\nüëâ <b>–í—ã</b> —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç–µ —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É –Ω–∞—Å –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –µ–º—É —Å–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–ª—é—á. \nüëà <b>–ú—ã</b> –Ω–∞—á–∏—Å–ª—è–µ–º –∏ –≤–∞–º –∏ –≤–∞—à–µ–º—É –¥—Ä—É–≥—É –ø–æ üîü <b>–±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤</b> –∫–∞–∂–¥–æ–º—É.\n\n<i>WIN - WIN</i> ü§ù'
    keyboard = [[InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –∫–ª—é—á –¥—Ä—É–≥–∞', callback_data = 'refkey')],
                [InlineKeyboardButton('–£–∑–Ω–∞—Ç—å —Å–≤–æ–π –∫–ª—é—á', callback_data = 'mykey')], ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(text, parse_mode = 'HTML', reply_markup = reply_markup)


def handle_rating_command(update, context):
    user_id = update.message.from_user.id
    start = '''üìå –ù–∞–¥–µ—é—Å—å —É –≤–∞—Å —É–∂–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ø—Ä–æ–±—ã–≤–∞—Ç—å –≤–µ—Å—å –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª  ü§ñ\n\nüìå –û—á–µ–Ω—å –≤–∞—Å –ø—Ä–æ—à—É –æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ –≤—ã–±—Ä–∞—Ç—å —á–µ—Å—Ç–Ω—É—é –æ—Ü–µ–Ω–∫—É –º–æ–µ–π —Ä–∞–±–æ—Ç—ã üôÇ\n\nüìå –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—é –æ—Ü–µ–Ω–∫—É, –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –º–æ–∏–º —Å–æ–∑–¥–∞—Ç–µ–ª—è–º)'''
    keyboard = [[InlineKeyboardButton('1', callback_data = 'rate_1'),
                 InlineKeyboardButton('2', callback_data = 'rate_2'),
                 InlineKeyboardButton('3', callback_data = 'rate_3'),
                 InlineKeyboardButton('4', callback_data = 'rate_4'),
                 InlineKeyboardButton('5', callback_data = 'rate_5')]]

    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(start, reply_markup=reply_markup)


def handle_gogpt_command(update, context):
    user_id = update.effective_user.id
    if not my_db.check_user_exists(user_id):
        my_db.set_user_message_limit(user_id, 25)
        my_db.set_user_registration_status(user_id, False)

    start = 'üöÄ –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å, –∏ —è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—á—É üöÄ'
    update.message.reply_text(start)


def handle_offer_command(update, context):
    user_id = update.effective_user.id
    if user_id in my_config.admins:
        bot = Bot(bot_token)
        user_message = update.message.text
        text_after_command = user_message.replace('/offer ', '', 1).replace("%id%", str(user_id))

        ids = my_db.get_all_user_ids()
        for id in ids:
            try: bot.send_message(chat_id=id, text=text_after_command)
            except Exception: print(f"–û—à–∏–±–∫–∞: {Exception}")


def handle_present_command(update, context):
    user_id = update.effective_user.id
    i = 1
    for s in update.message.text.split(' '):
        print(f'{i}: {s}')
        i += 1
    if user_id in my_config.admins:
        try:
            arr = update.message.text.split(' ')
            my_db.set_user_message_limit(arr[1], my_db.get_user_message_limit(int(arr[1])) + int(arr[2]))
        except: return
