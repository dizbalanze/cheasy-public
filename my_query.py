import my_config
import my_db
import my_robokassa
import my_robokassa_db
import telebot
from telebot import types
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Bot
from telegram.ext import ConversationHandler

bot_token = my_config.bot_token
tg_bot = telebot.TeleBot(bot_token)


def handle_friend(update, context):
    query = update.callback_query
    query.answer()
    user_id = query.from_user.id

    m_limit = my_db.get_user_message_limit(user_id)
    if m_limit == 0:
        my_db.set_user_message_limit(user_id, 25)

    text = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º —Å–æ —Å–≤–æ–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å –≤—ã–≥–æ–¥—É. –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –≤–∞–º–∏ –¥—Ä—É–≥–∞ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å 10 –∑–∞–ø—Ä–æ—Å–æ–≤, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ üí∏\n\nü§î <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n\nüëâ <b>–í—ã</b> —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç–µ —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É –Ω–∞—Å –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –µ–º—É —Å–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–ª—é—á. \nüëà <b>–ú—ã</b> –Ω–∞—á–∏—Å–ª—è–µ–º –∏ –≤–∞–º –∏ –≤–∞—à–µ–º—É –¥—Ä—É–≥—É –ø–æ üîü <b>–±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤</b> –∫–∞–∂–¥–æ–º—É.\n\n<i>WIN - WIN</i> ü§ù'
    keyboard = [[InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –∫–ª—é—á –¥—Ä—É–≥–∞', callback_data = 'refkey')],
                [InlineKeyboardButton('–£–∑–Ω–∞—Ç—å —Å–≤–æ–π –∫–ª—é—á', callback_data = 'mykey')],]
    reply_markup = InlineKeyboardMarkup(keyboard)
    query.message.reply_text(text, parse_mode='HTML', reply_markup=reply_markup)


def handle_refkey(update, context):
    query = update.callback_query
    query.answer()
    user_id = query.from_user.id

    if not my_db.get_user_registration_status(user_id):
        query.message.reply_text(f'–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–ª—é—á, –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å –¥—Ä—É–≥–∞.\n\n–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 10 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ üî•\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –∫–ª—é—á –∏ —è –≤—Å–µ —Å–¥–µ–ª–∞—é üôÇ')
        context.user_data['state'] = 0
        return 0
    else: query.message.reply_text('‚ö†Ô∏è–û—à–∏–±–∫–∞‚ö†Ô∏è\n–í—ã —É–∂–µ –≤–≤–µ–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–ª—é—á.')


def handle_invitation_code(update, context):
    # GOOD
    user_message = update.message.text
    user_id = update.message.from_user.id

    user_exist = my_db.check_user_exists(user_message)
    reg_status = my_db.get_user_registration_status(user_id)
    not_himself = str(user_message) != str(user_id)
    print(user_exist, reg_status, not_himself)
    if str(user_message) == str(user_id): start = '–û—à–∏–±–∫–∞! –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥'
    elif user_exist and not_himself and (reg_status != 100):
        my_db.set_user_message_limit(user_id, (my_db.get_user_message_limit(user_id) + 10))
        my_db.set_user_message_limit(int(user_message), (my_db.get_user_message_limit(int(user_message)) + 10))
        my_db.set_user_registration_status(user_id, 100)
        my_db.set_user_registration_status(int(user_message), 100)

        cam = my_db.count_all_messages(user_id)
        start = f'‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ.\n\n10 –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.\n\n–¢–µ–ø–µ—Ä—å –≤–∞—à –±–∞–ª–∞–Ω—Å –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n\n‚òëÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –µ—â–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: {my_db.get_user_message_limit(user_id) - cam} –∑–∞–ø—Ä–æ—Å–æ–≤.\n\n‚òëÔ∏è –í—Å–µ–≥–æ –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏: {cam} –∑–∞–ø—Ä–æ—Å–æ–≤'
        keyboard = [[InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å GPT", callback_data = "gogpt")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text(start, reply_markup = reply_markup)
        del context.user_data['state']
        return ConversationHandler.END
    elif reg_status == 100: start = '–í—ã —É–∂–µ –≤–≤–æ–¥–∏–ª–∏ –∫–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏'
    else: start = f'‚ö†Ô∏è –û—à–∏–±–∫–∞ ‚ö†Ô∏è\n\n–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á.'
    update.message.reply_text(start)
    del context.user_data['state']
    return ConversationHandler.END


def handle_mykey(update, context):
    # GOOD
    query = update.callback_query
    query.answer()
    user_id = query.from_user.id
    bot = Bot(bot_token)
    query.message.reply_text(f'–í–∞—à –∫–æ–¥: {user_id} \n\n–ï—Å–ª–∏ –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –≤–≤–µ–¥—ë—Ç –≤–∞—à –∫–æ–¥ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /referal, –≤—ã –æ–±–∞ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ 10 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –î–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞, –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –≥–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤–∞–º –Ω—É–∂–Ω–æ –µ–≥–æ –ª–∏—à—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É) üëá')
    text = f'–ü—Ä–∏–≤–µ—Ç! –ü–æ–ø—Ä–æ–±—É–π –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å –ø—Ä—è–º–æ –≤ –¢–ì, –±–µ–∑ –∫–∞–∫–∏—Ö –ª–∏–±–æ VPN –∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç. –Ø —É–∂–µ –ø–æ–ª—å–∑—É—é—Å—å, –º–Ω–µ –∑–∞—Ö–æ–¥–∏—Ç. –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —ç—Ç–æ—Ç –∫–æ–¥: <code>{user_id}</code> –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /referal –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 10 –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ, —Ä–µ–∞–ª—å–Ω–æ –∫—Ä—É—Ç–∞—è —Ç–µ–º–∞: {my_config.chat_link}'
    keyboard = [[InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å GPT", callback_data = "gogpt")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    query.message.reply_text(text, parse_mode = "HTML", reply_markup = reply_markup)


def is_user_subscribed(chat_id, user_id):
    bot = telebot.TeleBot(bot_token)
    try:
        member = bot.get_chat_member(chat_id, user_id)
        print('User ' + member.status)
        return member.status in ['member', 'administrator', 'creator']
    except telebot.apihelper.ApiException:
        return False


def handle_dialog(update, context):
    query = update.callback_query
    query.answer()
    user_id = query.from_user.id

    if query.data == 'page_2':
        start = f'–¢–∞–∫ –∫–∞–∫ —è –±—É–¥—É –¥–ª—è –≤–∞—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é, —É –º–µ–Ω—è –µ—Å—Ç—å –∫ –≤–∞–º –ø—Ä–æ—Å—å–±–∞) –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º  —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è. –ï–≥–æ –∑–æ–≤—É—Ç –ò–≤–∞–Ω, –≤ —Å–≤–æ–µ–º –∫–∞–Ω–∞–ª–µ –æ–Ω —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç "–ö–∞–∫?" –∏ "–ü–æ—á–µ–º—É?" –º–æ–∏ –±—Ä–∞—Ç—å—è –∏ —Å–µ—Å—Ç—Ä—ã –Ω–µ–π—Ä–æ-—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∑–∞–º–µ–Ω—è—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –ª—é–¥–µ–π, –∏ –∫–∞–∫ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤–Ω–µ–¥—Ä–∏—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –≤ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å —É–∂–µ —Å–µ–π—á–∞—Å, –æ–±–æ–≥–Ω–∞–≤ —Å–≤–æ–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –Ω–∞ –∫–∏–ª–æ–º–µ—Ç—Ä—ã.\n\n–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª –∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ {my_config.chat_link}\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∞–ª—Å—è‚úÖ", –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –º–Ω–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã)'
        keyboard = [[InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞–ª—Å—è‚úÖ', callback_data = 'page_3')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.message.reply_text(start, reply_markup=reply_markup)

    elif query.data == 'page_3':
        if is_user_subscribed(my_config.channel_id, user_id):
            start = 'üìå –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤ —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞.\n\nüöÄ –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å, —Å–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —É –º–µ–Ω—è –≤—Å–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ !'
            query.message.reply_text(start)
        else:
            start = f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –≤–∏–∂—É, —á—Ç–æ –≤—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ò–≤–∞–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª {my_config.chat_link} –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∞–ª—Å—è‚úÖ", –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –º–Ω–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã)'
            keyboard = [[InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞–ª—Å—è‚úÖ', callback_data = 'page_3')]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            query.message.reply_text(start, reply_markup=reply_markup)


def handle_gogpt(update, context):
    query = update.callback_query
    query.answer()
    user_id = query.from_user.id

    if is_user_subscribed(my_config.channel_id, user_id):
        start = 'üöÄ –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å, –∏ —è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—á—É üöÄ'
        query.message.reply_text(start)
    else:
        start = f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –≤–∏–∂—É, —á—Ç–æ –≤—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ò–≤–∞–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª {my_config.chat_link} –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∞–ª—Å—è‚úÖ", –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –º–Ω–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã)'
        keyboard = [[InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞–ª—Å—è‚úÖ', callback_data = 'page_3')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.message.reply_text(start, reply_markup = reply_markup)


def handle_buy(update, context):
    query = update.callback_query
    query.answer()
    user_id = query.from_user.id

    amount = int(query.data.split("_")[1])
    pay_id = my_robokassa_db.count_payment_ids() + 300
    context.user_data['amount'] = amount
    context.user_data['pay_id'] = pay_id
    my_robokassa_db.add_payment_user(pay_id, user_id)
    pay_link = my_robokassa.generate_payment_link(my_config.prices[amount], f'–î–æ–±–∞–≤–ª–µ–Ω–∏–µ {amount} –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç', pay_id)
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text = "–û–ø–ª–∞—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å–æ–º Robokassa", callback_data = f"none", url=pay_link))
    keyboard.add(types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞", callback_data=f"check_{pay_id}"))
    print(f'BUY: {amount}')
    text = f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã\n\n‚ö†Ô∏è–í–∞–∂–Ω–æ‚ö†Ô∏è\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞", —á—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–∏—à–ª–∏ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å'
    tg_bot.send_message(user_id, text, reply_markup=keyboard)


def handle_check(update, context):
    query = update.callback_query
    query.answer()
    user_id = query.from_user.id

    pay_id = int(query.data.split("_")[1])
    amount = int(context.user_data['amount'])
    print(f'CHEK: {amount} / {my_config.prices[amount]}')
    print(my_robokassa.check_payment_status(pay_id))
    print(f'LIMIT: {my_db.get_user_message_limit(user_id) + amount}')
    payment_status, payment_link = my_robokassa.check_payment_status(pay_id)
    my_robokassa_db.set_status_link(pay_id, payment_status, payment_link)

    if payment_status == 100 and context.user_data['pay_id'] != None:
        new_limit = my_db.get_user_message_limit(user_id) + context.user_data['amount']
        my_db.set_user_message_limit(user_id, new_limit)
        del context.user_data['amount']
        context.user_data['pay_id'] = None
        al_mes = my_db.count_all_messages(user_id)
        start = f'‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ. {amount} –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.\n\n–¢–µ–ø–µ—Ä—å –≤–∞—à –±–∞–ª–∞–Ω—Å –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n\n‚òëÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –µ—â–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: {new_limit - al_mes} –∑–∞–ø—Ä–æ—Å–æ–≤.\n‚òëÔ∏è –í—Å–µ–≥–æ –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏: {al_mes} –∑–∞–ø—Ä–æ—Å–æ–≤'

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton(text = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å GPT", callback_data = 'gogpt'))
        tg_bot.send_message(user_id, start, reply_markup = keyboard)
    elif payment_status == 100: tg_bot.send_message(user_id, "–ó–∞–ø—Ä–æ—Å—ã —É–∂–µ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á—ë—Ç.")
    else: tg_bot.send_message(user_id, "–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ –∏–ª–∏ –æ–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.")


def handle_rating_response(update, context):
    # GOOD
    query = update.callback_query
    query.answer()
    my_db.set_user_rating(query.from_user.id, int(query.data.split('_')[1]))

    start = f'–û–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –ú—ã –±—É–¥–µ–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ —Å –∫–∞–∂–¥—ã–º –¥–Ω—ë–º üöÄ\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ–ø–∏—à–∏—Ç–µ –ª—é–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏ –æ—â—É—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–æ—Ç–∞ ü§ñ'
    query.message.reply_text(start)
    context.user_data['awaiting_review'] = True


def handle_payment(update, context):
    # GOOD
    query = update.callback_query
    query.answer()

    start = '–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –≤—ã –¥–∞—ë—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —É—Å–ª–æ–≤–∏—è <a href="https://telegra.ph/Publichnyj-dogovor-oferta-11-29">–ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç—ã</a>'
    query.message.reply_text(start, parse_mode='HTML')

    start2 = '–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–ª–∏—Å—å —Å–¥–µ–ª–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–∑—Ä–∞—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É. –ü–æ—ç—Ç–æ–º—É —Ç–µ–ø–µ—Ä—å –≤–∞–º –Ω–µ –Ω–∞–¥–æ –ø–ª–∞—Ç–∏—Ç—å –Ω–∏–∫–∞–∫—É—é –ø–æ–¥–ø–∏—Å–∫—É. ü§ù\n\n‚òëÔ∏è –í—ã –ø–ª–∞—Ç–∏—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Ç–æ–ª—å–∫–æ –∑–∞ –∑–∞–ø—Ä–æ—Å—ã.\n‚òëÔ∏è –í—ã —Å–∞–º–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç–µ —Å–∫–æ–ª—å–∫–æ –≤–∞–º –Ω—É–∂–Ω–æ.\n\n<i>–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º</i> @NeoBoostSupport\n\nüëá –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–∞–∫–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ üëá'

    keyboard = [
        [InlineKeyboardButton("100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 200 ‚ÇΩ", callback_data = "buy_100")],
        [InlineKeyboardButton("250 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 425 ‚ÇΩ", callback_data = "buy_250")],
        [InlineKeyboardButton("500 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 750 ‚ÇΩ", callback_data = "buy_500")],
        [InlineKeyboardButton("1000 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 990 ‚ÇΩ", callback_data = "buy_1000")]]

    reply_markup = InlineKeyboardMarkup(keyboard)

    query.message.reply_text(start2, parse_mode = 'HTML', reply_markup = reply_markup)

